set hlsearch
set ignorecase
set smartcase
set scrolloff=3 " 3 lines above/below cursor when scrolling

" Emulated Plugins
set surround
" See vim exchange
set exchange
" adds argument to cd - actions
set argtextobj
" highlight yanked text
set highlightedyank
" Copy to system clipboard as well
set clipboard+=unnamed
" Use Idea to join lines smartly
set ideajoin

" Multiple cursors support
"set multiple-cursors

" These settings are from - https://github.com/Valloric/dotfiles/blob/master/intellij/ideavimrc

" let mapleader = ","
let mapleader = " "
" let maplocalleader = ","

" edit text
" These create newlines like o and O but stay in normal mode
nmap zj mbo<Esc>`b
nmap zk mbO<Esc>`b
nmap zJ mbjdd`b
nmap zK mbkdd`b
nmap dl :action EditorDuplicate<cr>
nmap Y vuy

nmap <leader>spotbugs :action SpotBugs.AnalyseScope<CR>
nmap <leader>sonar :action SonarLint.AnalyzeChangedFiles<CR>
nmap <leader>qaplug :action QAPlug.AnalyzeCode<CR>
nmap <leader>ic :action InspectCode<cr>
nmap <leader>test :action Console.Open<CR>

" Navigation
nmap L :action Back<cr>
nmap H :action Forward<cr>

" New staff
nnoremap ,e :action SearchEverywhere<CR>
nnoremap ,f :action FindInPath<CR>
nnoremap ,s :action FileStructurePopup<CR>
nnoremap ,/ :action Find<cr>
"nnoremap gp :action JumpToLastChange<CR>

"nnoremap U :action FindUsages<CR>
"nnoremap R :action RenameElement<CR>

nnoremap == :action ReformatCode<CR>
vnoremap == :action ReformatCode<CR>

nnoremap cc :action CommentByLineComment<CR>
vnoremap cc :action CommentByLineComment<CR>

"nnoremap <C-CR> :action ShowIntentionActions<CR>
"nnoremap <C-CR> :action EditorPopupMenu<CR>

nnoremap ,a :action GotoAction<CR>
vnoremap ,a :action GotoAction<CR>

" Multiple cursors
nmap <c-[> :action EditorCloneCaretAbove<CR>
nmap <c-]> :action EditorCloneCaretBelow<CR>

" Search
nmap <leader>fip :action FindInPath<CR>
"" find in files
nmap <leader>fu :action FindUsages<CR>
nmap <leader>fa :action GotoAction<CR>
nmap <leader>fc :action GotoClass<CR>
nmap <leader>ff :action GotoFile<cr>
nmap <leader>url :action GotoUrlAction<cr>

nmap gd :action GotoDeclaration<CR>
nmap gtd :action GotoTypeDeclaration<CR>
nmap gs :action GotoSuperMethod<CR>
nmap gi :action GotoImplementation<CR>
nmap gf :action GotoFile<cr>
nmap gr :action RecentChangedFiles<cr>
nmap grl :action RecentLocations<cr>
nmap gE :action RecentLocations<cr>
nmap ge :action RecentFiles<cr>
nmap gt :action GotoTest<cr>
nmap gp :action JumpToLastWindow<cr>
nmap gb :action ShowBookmarks<cr>
nmap g, :action JumpToLastChange<CR>
nmap g. :action JumpToNextChange<CR>
nmap grel :action GotoRelated<cr>


" Git
nmap <leader>gg :action Git.MainMenu<cr>

nmap <leader>M :action ActivateStructureToolWindow<cr>

nmap <leader>I :action SelectIn<cr>
nmap <leader>sel :action SelectIn<cr>
nmap <C-,> :action MethodUp<cr>
nmap <C-.> :action MethodDown<cr>


"Popups
nmap <leader>fsp :action FileStructurePopup<CR>
nmap <leader>sfp :action ShowFilePath<CR>
nmap <leader>fp :action ShowFilePath<CR>
nmap <leader>uml :action ShowUmlDiagramPopup<CR>
""Context menu
nmap <leader>cm :action EditorPopupMenu<CR>
nmap <leader>ha :action HideAllWindows<CR>
nmap <leader>hw :action HideAllWindows<CR>
nmap <leader>wh :action HideAllWindows<CR>

nmap <leader>goto :action GoToCodeGroup<cr>
nmap <leader>ga :action GotoAction<CR>
nmap <leader>gc :action GotoClass<CR>
nmap <leader>gm :action GoToMenu<CR>
nmap gm :action GoToMenu<CR>
vmap gm :action GoToMenu<CR>
nmap gurl :action GotoUrlAction<CR>

" Actions
nmap <c-p> :action ParameterInfo<CR>
vmap <c-p> :action ParameterInfo<CR>
nmap <leader>ch :action CallHierarchy<CR>
nmap <leader>th :action TypeHierarchy<CR>
nmap <leader>mh :action MethodHierarchy<CR>
nmap <leader>sb :action SliceBackward<CR>
nmap <leader>sf :action SliceForward<CR>
nmap <leader>qd :action QuickJavaDoc<CR>
nmap <leader>spw :action SelectInProjectView<CR>
nmap <leader>S :action SelectInProjectView<CR>
nmap <leader>h :action HideAllWindows<CR>
nmap <leader>ann :action Annotate<CR>
nmap <leader>reload :source ~/.ideavimrc<CR>

" Projects
nmap <leader>np :action NextProjectWindow<CR>
nmap <leader>pp :action PreviousProjectWindow<CR>
nmap <leader>pw :action OpenProjectWindows<CR>

" tools
nmap <leader>annotate :action Annotate<CR>
nmap <leader>atw :action ActivateTerminalToolWindow<CR>
nmap <leader>cmd :action ActivateTerminalToolWindow<CR>
nnoremap <a-0> :action ActivateTerminalToolWindow<CR>

" Refactorings
nmap <leader>rr :action RenameElement<CR>
nmap <leader>r= :action ReformatCode<CR>
vmap <leader>r= :action ReformatCode<CR>
nmap <leader>cc :action CommentByLineComment<CR>
vmap <leader>cc :action CommentByLineComment<CR>
nmap <leader>cg :action Generate<cr>
vmap R :action Refactorings.QuickListPopupAction<cr>
nmap R :action Refactorings.QuickListPopupAction<cr>
nmap <leader>oi :action OptimizeImports<cr>
vmap <leader>rf :action RefactoringMenu<CR>
nmap <leader>rf :action RefactoringMenu<CR>

nmap <leader>sd :action SequencePlugin.ShowSequenceDiagram<CR>
vmap <leader>sd :action SequencePlugin.ShowSequenceDiagram<CR>
"" Inspection
nmap <leader>ric :action InspectCode<cr>

" key bindings for quickly moving between windows
" h left, l right, k up, j down
nmap <leader>wh <c-w>h
nmap <leader>wl <c-w>l
nmap <leader>wk <c-w>k
nmap <leader>wj <c-w>j
"
"" Closing tabs
nmap <leader>wc :action CloseContent<cr>
nmap <leader>wC :action ReopenClosedTab<cr>
"" To navigate between split panes
nmap <leader>wn :action NextSplitter<cr>
nmap <leader>wp :action PrevSplitter<cr>
" nmap <leader>j :action PrevSplitter<cr>
"" Splits manipulation
nmap <leader>sh :action SplitHorizontally<cr>
nmap <leader>sv :action SplitVertically<cr>
nmap <leader>hs :action SplitHorizontally<cr>
nmap <leader>vs :action SplitVertically<cr>
nmap <leader>mm :action Unsplit<cr>
nmap <leader>max :action UnsplitAll<cr>
nmap <leader>us :action Unsplit<cr>
nmap <leader>usa :action UnsplitAll<cr>
nmap <leader>jlw :action JumpToLastWindow<cr>
nmap <leader>mo :action MoveEditorToOppositeTabGroup<cr>
nmap <leader>oo :action OpenEditorInOppositeTabGroup<cr>

" easy window navigation
nmap <c-l> <c-w>l
nmap <a-l> <c-w>l
nmap <c-j> <c-w>j
nmap <c-h> <c-w>h
nmap <a-h> <c-w>h
nmap <c-k> <c-w>k
nmap <a-o> :action MoveEditorToOppositeTabGroup<cr>
nmap <a-s-O> :action OpenEditorInOppositeTabGroup<cr>
" scrolling
nmap <c-s-j> :action EditorScrollUp<cr>
nmap <c-s-k>  :action EditorScrollDown<cr>
nmap <c-s-h>  :action EditorScrollLeft<cr>
nmap <c-s-l>  :action EditorScrollRight<cr>
nmap <c-s-m>  :action EditorScrollToCenter<cr>
"EditorScrollTop
"EditorScrollBottom

nmap / :action Find<cr>

nmap <leader>find :action Find<cr>
nmap <leader>fi :action Find<cr>
vmap <leader>find :action Find<cr>
vmap <leader>fi :action Find<cr>
"
"" Building, Running and Debugging
nmap <leader>cd :action CompileDirty<cr>
nmap <leader>run :action Run<cr>
" double ctrl
"nmap <leader>ra :action RunAnything<cr>
nmap <leader>rm :action RunMenu<cr>
nmap <leader>rrt :action RerunTests<cr>
nmap <leader>rrft :action RerunFailedTests<cr>
nmap <leader>rc :action RunConfiguration<cr>

"Debug
nmap <leader>debug :action Debug<cr>
nmap <leader>stop :action Stop<cr>
nmap <leader>si :action StepInto<cr>
nmap <leader>so :action StepOver<cr>
nmap <leader>con :action Resume<CR>
nmap <leader>resume :action Resume<CR>
nmap <leader>continue :action Resume<CR>
nmap <leader>sout :action StepOut<cr>
nmap <leader>sO :action StepOut<cr>
nmap <leader>sbp :action StopBackgroundProcesses<cr>
nmap <leader>ssi :action SmartStepInto<CR>
"Evaluate expression
nmap <leader>eval :action EvaluateExpression<CR>
nmap <leader>ee :action EvaluateExpression<CR>
nmap <leader>exec :action EvaluateExpression<CR>
vmap <leader>eval :action EvaluateExpression<CR>
vmap <leader>ee :action EvaluateExpression<CR>
vmap <leader>exec :action EvaluateExpression<CR>
"Quick evaluate
nmap <leader>qeval :action QuickEvaluateExpression<CR>
vmap <leader>qeval :action QuickEvaluateExpression<CR>
nmap <leader>qe :action QuickEvaluateExpression<CR>
vmap <leader>qe :action QuickEvaluateExpression<CR>
" Evaluate parameter
nmap <leader>ep :action QuickEvaluateExpression<CR>
vmap <leader>ep :action QuickEvaluateExpression<CR>
nmap <leader>ti :action ExpressionTypeInfo<CR>
vmap <leader>ti :action ExpressionTypeInfo<CR>

" Check data flow analysis
" Igor debugging
" Check stream debugger


" Breakpoints
nmap <leader>vbb :action ViewBreakpoints<CR>
" Stop break points
nmap <leader>bbs :action XDebugger.MuteBreakpoints<CR>
nmap <leader>bb :action ToggleLineBreakpoint<CR>

" built-in navigation to navigated items works better
nnoremap <c-o> :action Back<cr>
nnoremap <c-i> :action Forward<cr>

nmap <leader>afw :action ActivateFavoritesToolWindow<CR>
nmap <leader>fav :action ActivateFavoritesToolWindow<CR>
nmap <leader>faw :action ActivateFavoritesToolWindow<CR>
nmap <Leader>apw :action ActivateProjectToolWindow<CR>
nmap <leader>adw :action ActivateDebugToolWindow<CR>
nmap <leader>dbgw :action ActivateDebugToolWindow<CR>
nmap <leader>debugw :action ActivateDebugToolWindow<CR>
nmap <leader>arw :action ActivateRunToolWindow<CR>
nmap <leader>runw :action ActivateRunToolWindow<CR>
nmap <leader>apw :action ActivateProblemsViewToolWindow<CR>
nmap <leader>problems :action ActivateProblemsViewToolWindow<CR>
nmap <leader>asw :action ActivateStructureToolWindow<CR>
map <leader>structure :action ActivateStructureToolWindow<CR>
nmap <leader>todo :action ActivateTODOToolWindow<CR>


" VCS operations
nmap <leader>change :action Vcs.Show.Local.Changes<cr>
" nmap <leader>yp :action Vcs.QuickListPopupAction<cr>
" nmap <leader>ya :action Annotate<cr>
nmap <leader>log :action Vcs.Show.Log<cr>
nmap <leader>clv :action Compare.LastVersion<cr>
" nmap <leader>yr :action Git.ResolveConflicts<cr>

" IdeaVim uses 'a' for alt instead of Vim's 'm'

" Won't work in visual mode (with vmap) for some reason.
" Use default map of <c-/> for that.
" nmap gcc :action CommentByLineComment<cr>

" unimpaired mappings - from https://github.com/saaguero/ideavimrc/blob/master/.ideavimrc
" nnoremap [<space> O<esc>j
" nnoremap ]<space> o<esc>k
" nnoremap [q :action PreviousOccurence<cr>
" nnoremap ]q :action NextOccurence<cr>
" nnoremap [m :action MethodUp<cr>
" nnoremap ]m :action MethodDown<cr>
" nnoremap [c :action VcsShowPrevChangeMarker<cr>
" nnoremap ]c :action VcsShowNextChangeMarker<cr>

" Errors
"nmap <leader>gne :action GotoNextError<cr>
"nmap <leader>gpe :action GotoPreviousError<cr>
"nmap <leader>sed :action ShowErrorDescription<cr>


" replaced with multiple cursors commands
"nmap <c-n> :action NextSplitter<cr>
"nmap <c-p> :action PrevSplitter<cr>

" Show Switcher
"nmap <a-quote>switcher:action Switcher<CR>


" Clojure specific mappings for Cursive
" nmap \c :action :cursive.repl.actions/clear-repl<cr>
" nmap \l :action :cursive.repl.actions/load-file<cr>
" nmap \o :action :cursive.repl.actions/jump-to-output<cr>
" nmap \r :action :cursive.repl.actions/jump-to-repl<cr>
" nmap \t :action :cursive.testing.actions/run-ns-tests<cr>
" nmap \T :action :cursive.testing.actions/rerun-last-test<cr>
" nmap \C :action :cursive.testing.actions/remove-test-markers<cr>

" Python specific mappings
" Format code with Black fomatter
" nmap \p :action Tool_External Tools_Black<cr>

" :cursive.repl.actions/clojure-repl-commands-group
" :cursive.repl.actions/clojure-repl-group
" :cursive.repl.actions/interrupt
" :cursive.repl.actions/jump-to-output
" :cursive.repl.actions/jump-to-repl                 <C-\>
" :cursive.repl.actions/load-file                    <A-S-L>
" :cursive.repl.actions/macroexpansion               <C-S-\>
" :cursive.repl.actions/next-history-item            <C-Down>
" :cursive.repl.actions/prev-history-item            <C-Up>
" :cursive.repl.actions/print-exception
" :cursive.repl.actions/run-last-sexp
" :cursive.repl.actions/run-top-sexp                 <A-S-P>
" :cursive.repl.actions/search-history               <A-C-E>
" :cursive.repl.actions/switch-namespace             <A-S-R>
" :cursive.repl.actions/sync-files                   <A-S-M>
" :cursive.repl.commands/add-new
" :cursive.repl.commands/edit
" :cursive.testing.actions/remove-test-markers
" :cursive.testing.actions/rerun-last-test
" :cursive.testing.actions/run-ns-tests
" :cursive.testing.actions/run-single-test

" External GVim
" nmap <leader>v :action Tool_External Tools_gvim<cr>

" External Emacs
" nmap <leader>E :action Tool_External Tools_emacsclient<cr>

" External Sublime Text
" nmap <leader>S :action Tool_External Tools_sublime_text<cr>

" Use Q for formatting the current paragraph (or visual selection)
" vmap Q gq
" nmap Q gqap

" git flow
" noremap \[ <ESC>:action Gitflow.OpenGitflowPopup<CR>
" Vcs
" noremap \] <ESC>:action Vcs.QuickListPopupAction<CR>
sethandler <C-S-Q> a:ide
sethandler <C-.> a:vim
sethandler <A-0> a:vim
sethandler <C-2> a:vim
sethandler <C-A> a:vim
sethandler <C-B> a:vim
sethandler <C-C> a:vim
sethandler <C-D> a:vim
sethandler <C-E> a:vim
sethandler <C-F> a:ide
sethandler <C-G> a:vim
sethandler <C-H> a:vim
sethandler <C-S-H> a:vim
sethandler <C-I> a:vim
sethandler <C-J> a:vim
sethandler <C-S-J> a:vim
sethandler <C-S-K> a:vim
sethandler <C-L> a:vim
sethandler <C-S-L> a:vim
sethandler <C-M> a:vim
sethandler <C-N> a:vim
sethandler <C-O> a:vim
sethandler <A-O> a:vim
sethandler <A-S-O> a:vim
sethandler <C-P> a:vim
sethandler <C-Q> a:ide
sethandler <C-R> a:vim
sethandler <C-S> a:vim
sethandler <C-T> a:vim
sethandler <C-U> a:vim
sethandler <C-V> a:vim
sethandler <C-W> a:ide
sethandler <C-X> a:vim
sethandler <C-Y> a:vim
sethandler <C-[> a:vim
sethandler <C-]> a:vim
